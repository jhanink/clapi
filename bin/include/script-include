DAS_script_name=`basename "$0"`
DAS_args="$@"
DAS_arg_1="$1"

if [ `basename "$PWD"` == "bin" ];
then
  DAS_index='../index';
  DAS_print_output='../print_output';
  DAS_base_dir=`dirname "$PWD"`;
else
  DAS_index='index';
  DAS_print_output='print_output';
  DAS_base_dir=`"$PWD"`;
fi

DAS_output_dir="${DAS_base_dir}/output"


# requires bash v3+ for '=~'
if [ -z "$1" ] || [ "$1" == "--JSON" ] || [ "$1" == "--RAW" ] \
   || [ "$1" == "--PRETTY" ] || [ "$1" == "--WRAP" ] \
    || [ "$1" == "--ERROR" ] || [[ "$1" =~ ^--EVAL* ]];
then
  DAS_has_params=0
else
  DAS_has_params=1
fi


function DAS_handle_response() {
  DAS_response_status=`node $DAS_print_output --file=$DAS_output_dir/TEMP_RESULT.json --EVAL=status`
  if [ "$DAS_response_status" == "SUCCESS" ];
  then
    node $DAS_print_output --file=$DAS_output_dir/TEMP_RESULT.json --EVAL=body > $DAS_output_dir/$DAS_script_name.json
  else
    node $DAS_print_output --file=$DAS_output_dir/TEMP_RESULT.json --EVAL=body > $DAS_output_dir/${DAS_script_name}_ERROR.json
    node $DAS_print_output --file=$DAS_output_dir/${DAS_script_name}_ERROR.json $DAS_args
    exit 1;
  fi
}

function DAS_print_output() {
  if [ ! -z "$1" ];
  then
    node $DAS_print_output --file=$1 $DAS_args
    exit 0;
  fi

  if [ "$DAS_arg_1" == "--ERROR" ];
  then
    node $DAS_print_output --file=$DAS_output_dir/${DAS_script_name}_ERROR.json $DAS_args
  else
    node $DAS_print_output --file=$DAS_output_dir/$DAS_script_name.json $DAS_args
  fi
}
