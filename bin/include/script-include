DAS_script_name=`basename "$0"`
DAS_args="$@"
DAS_arg_1="$1"
DAS_arg_2="$2"

if [ `basename "$PWD"` == "bin" ];
then
  DAS_index='../index';
  DAS_print_output='../print_output';
  DAS_base_dir=`dirname "$PWD"`;
else
  DAS_index='index';
  DAS_print_output='print_output';
  DAS_base_dir=`"$PWD"`;
fi

DAS_output_dir="${DAS_base_dir}/output"
DAS_temp_dir="$DAS_output_dir/temp"

mkdir -p $DAS_temp_dir

# requires bash v3+ for '=~'
if [ -z "$1" ] || [ "$1" == "--JSON" ] || [ "$1" == "--RAW" ] \
   || [ "$1" == "--PRETTY" ] || [ "$1" == "--WRAP" ] || [ "$1" == "--FUNC" ] \
   || [ "$1" == "--MORE" ] || [ "$1" == "--LESS" ] \
   || [ "$1" == "-H" ]  || [ "$1" == "-T" ]  || [ "$1" == "--SAVE" ] \
   || [ "$1" == "--EVALHELP" ] || [ "$1" == "--HELP" ] || [ "$1" == "-i" ] \
   || [ "$1" == "--ERROR" ] || [[ "$1" =~ ^--EVAL* ]] || [[ "$1" =~ ^--EXPR* ]] \
   || [[ "$1" =~ "^--upc=*" ]] || [[ "$1" =~ "^--wupc=*" ]];
then
  DAS_has_params=0
else
  DAS_has_params=1
fi


function DAS_handle_response() {
  DAS_response_status=`node $DAS_print_output --file=$DAS_output_dir/TEMP_RESULT.json --EVAL=status`
  if [ "$DAS_response_status" == "SUCCESS" ];
  then
    node $DAS_print_output --file=$DAS_output_dir/TEMP_RESULT.json --EVAL=body > $DAS_output_dir/$DAS_script_name.json
  else
    node $DAS_print_output --file=$DAS_output_dir/TEMP_RESULT.json --EVAL=body > $DAS_output_dir/${DAS_script_name}_ERROR.json
    node $DAS_print_output --file=$DAS_output_dir/${DAS_script_name}_ERROR.json $DAS_args
    exit 1;
  fi
}


function DAS_print_output() {
  if [ "$DAS_arg_1" == "--ERROR" ];
  then
    node $DAS_print_output --file=$DAS_output_dir/${DAS_script_name}_ERROR.json $DAS_args
  else
    for var in $DAS_args
    do
      if [ "$var" == "--MORE" ];
      then
        __print | more -R;
        exit 0;
      fi
      if [ "$var" == "--LESS" ];
      then
        __print | less -R;
        exit 0;
      fi
      if [ "$var" == "-H" ];
      then
        __print | head -$DAS_arg_2;
        exit 0;
      fi
      if [ "$var" == "-T" ];
      then
        __print | tail -$DAS_arg_2;
        exit 0;
      fi
    done
    __print "$@";
  fi
}

function __print() {
  if [ ! -z "$1" ];
  then
    cp $1 $DAS_output_dir/clapi.json
    node $DAS_print_output --file=$1 $DAS_args
    exit 0;
  fi
  cp $DAS_output_dir/$DAS_script_name.json $DAS_output_dir/clapi.json
  node $DAS_print_output --file=$DAS_output_dir/$DAS_script_name.json $DAS_args
}

